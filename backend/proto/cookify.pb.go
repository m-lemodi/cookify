// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: cookify.proto

package cookify

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_cookify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_cookify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Recipe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ingredients   []string               `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Instructions  string                 `protobuf:"bytes,3,opt,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_cookify_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{2}
}

func (x *Recipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Recipe) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

type RecipeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipes       []*Recipe              `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeList) Reset() {
	*x = RecipeList{}
	mi := &file_cookify_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeList) ProtoMessage() {}

func (x *RecipeList) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeList.ProtoReflect.Descriptor instead.
func (*RecipeList) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{3}
}

func (x *RecipeList) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type Ingredients struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingredients   []string               `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ingredients) Reset() {
	*x = Ingredients{}
	mi := &file_cookify_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ingredients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredients) ProtoMessage() {}

func (x *Ingredients) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredients.ProtoReflect.Descriptor instead.
func (*Ingredients) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{4}
}

func (x *Ingredients) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type Ustensil struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ustensil) Reset() {
	*x = Ustensil{}
	mi := &file_cookify_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ustensil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ustensil) ProtoMessage() {}

func (x *Ustensil) ProtoReflect() protoreflect.Message {
	mi := &file_cookify_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ustensil.ProtoReflect.Descriptor instead.
func (*Ustensil) Descriptor() ([]byte, []int) {
	return file_cookify_proto_rawDescGZIP(), []int{5}
}

func (x *Ustensil) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_cookify_proto protoreflect.FileDescriptor

const file_cookify_proto_rawDesc = "" +
	"\n" +
	"\rcookify.proto\x12\acookify\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"b\n" +
	"\x06Recipe\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vingredients\x18\x02 \x03(\tR\vingredients\x12\"\n" +
	"\finstructions\x18\x03 \x01(\tR\finstructions\"7\n" +
	"\n" +
	"RecipeList\x12)\n" +
	"\arecipes\x18\x01 \x03(\v2\x0f.cookify.RecipeR\arecipes\"/\n" +
	"\vIngredients\x12 \n" +
	"\vingredients\x18\x01 \x03(\tR\vingredients\"\x1e\n" +
	"\bUstensil\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name2\xa7\x02\n" +
	"\aCookify\x128\n" +
	"\bSayHello\x12\x15.cookify.HelloRequest\x1a\x13.cookify.HelloReply\"\x00\x122\n" +
	"\fCreateRecipe\x12\x0f.cookify.Recipe\x1a\x0f.cookify.Recipe\"\x00\x124\n" +
	"\tGetRecipe\x12\x14.cookify.Ingredients\x1a\x0f.cookify.Recipe\"\x00\x12:\n" +
	"\vListRecipes\x12\x14.cookify.Ingredients\x1a\x13.cookify.RecipeList\"\x00\x12<\n" +
	"\rSearchRecipes\x12\x14.cookify.Ingredients\x1a\x13.cookify.RecipeList\"\x00B[\n" +
	"\x18io.grpc.examples.cookifyB\fCookifyProtoP\x01Z/google.golang.org/grpc/examples/cookify/cookifyb\x06proto3"

var (
	file_cookify_proto_rawDescOnce sync.Once
	file_cookify_proto_rawDescData []byte
)

func file_cookify_proto_rawDescGZIP() []byte {
	file_cookify_proto_rawDescOnce.Do(func() {
		file_cookify_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cookify_proto_rawDesc), len(file_cookify_proto_rawDesc)))
	})
	return file_cookify_proto_rawDescData
}

var file_cookify_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cookify_proto_goTypes = []any{
	(*HelloRequest)(nil), // 0: cookify.HelloRequest
	(*HelloReply)(nil),   // 1: cookify.HelloReply
	(*Recipe)(nil),       // 2: cookify.Recipe
	(*RecipeList)(nil),   // 3: cookify.RecipeList
	(*Ingredients)(nil),  // 4: cookify.Ingredients
	(*Ustensil)(nil),     // 5: cookify.Ustensil
}
var file_cookify_proto_depIdxs = []int32{
	2, // 0: cookify.RecipeList.recipes:type_name -> cookify.Recipe
	0, // 1: cookify.Cookify.SayHello:input_type -> cookify.HelloRequest
	2, // 2: cookify.Cookify.CreateRecipe:input_type -> cookify.Recipe
	4, // 3: cookify.Cookify.GetRecipe:input_type -> cookify.Ingredients
	4, // 4: cookify.Cookify.ListRecipes:input_type -> cookify.Ingredients
	4, // 5: cookify.Cookify.SearchRecipes:input_type -> cookify.Ingredients
	1, // 6: cookify.Cookify.SayHello:output_type -> cookify.HelloReply
	2, // 7: cookify.Cookify.CreateRecipe:output_type -> cookify.Recipe
	2, // 8: cookify.Cookify.GetRecipe:output_type -> cookify.Recipe
	3, // 9: cookify.Cookify.ListRecipes:output_type -> cookify.RecipeList
	3, // 10: cookify.Cookify.SearchRecipes:output_type -> cookify.RecipeList
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cookify_proto_init() }
func file_cookify_proto_init() {
	if File_cookify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cookify_proto_rawDesc), len(file_cookify_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cookify_proto_goTypes,
		DependencyIndexes: file_cookify_proto_depIdxs,
		MessageInfos:      file_cookify_proto_msgTypes,
	}.Build()
	File_cookify_proto = out.File
	file_cookify_proto_goTypes = nil
	file_cookify_proto_depIdxs = nil
}
